services:
  traefik:
    image: traefik:v3.1
    container_name: traefik-dev
    restart: unless-stopped
    command:
      - --log.level=INFO
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --providers.docker=true
      - --api.insecure=true  
                  
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"   
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt

    networks:
      - lexion_internal_net
  frontend:
    build: 
      context: ./frontend1
      dockerfile: Dockerfile

    container_name: lectio-frontend
    restart: always
    networks:
      - lexion_internal_net 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile

    container_name: lectio-backend
    restart: always
    env_file:
      - .env
    networks:
      - lexion_internal_net 
    depends_on:
      - mongo
      - minio
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_DOMAIN}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"


  minio:
    image: minio/minio:latest
    container_name: lection_minio
    restart: unless-stopped
    volumes:
      - minio_data:/data
    networks:
      - lexion_internal_net
    environment:
      MINIO_ROOT_USER: "${MINIO_USER?}"
      MINIO_ROOT_PASSWORD: "${MINIO_PASSWORD?}"
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"

  mongo:
    image: mongo:7
    container_name: mongo
    networks:
      - lexion_internal_net
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME?}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD?}"
    volumes:
      - mongo_data:/data/db

volumes:
  minio_data:
  mongo_data:

networks:
   lexion_internal_net:


